#!/bin/sh
#********************************************************************************
# Configure script of eQmail-1.10

echo -n "Checking system ... "
OS=`uname -s | tr '/:[A-Z]' '..[a-z]'` ; echo -n $OS > systype
echo "building on "${OS}"!"
echo -n "Checking architecture ... "
ARCH=`uname -m` ; echo -n ":$ARCH" >> systype
echo "build on "${ARCH}"!"
# !!!!!!!!!!
#echo "" >> systype

#********************************************************************************
# Checking conf-* files
for cf in $(ls conf-*)
do
#  echo "Checking config file $cf ... done!"
  t=`echo $cf | cut -d- -f2`
  if [ ! $t == "cc" ] && [ ! $t == "ld" ] && \
     [ ! $t == "groups" ] && [ ! $t == "patrn" ] && [ ! $t == "opt" ] ; then
  echo -n "Checking config file $cf ... "
#     echo -n "Found $cf ... "
     # user alias
     if [ $t == "users" ] ; then t="usera" ; fi
     echo "char auto_$t[] = \""`head -1 $cf`"\";" > auto_"$t".c
     if [ $? -eq 0 ] ; then
        echo "auto_$t.c created!"
      else 
        echo "failed!" ; exit 1
     fi
  fi
done
#
echo "int auto_spawn = `head -1 conf-spawn`;" > auto_spawn.c
echo "int auto_split = `head -1 conf-split`;" > auto_split.c

#********************************************************************************
# checking that users from conf-users are exists
  id -u $(head -1 conf-users) 2>&1 >/dev/null  #|| (echo "run mkusers" ; exit 1)
  if [ $? -ne 0 ] ; then echo "Create users first!" ; exit 1 ; fi
for i in 2 3 4 5 6 7 8
do
  id -u `head -$i conf-users | tail -1` 2>&1 >/dev/null
  if [ $? -ne 0 ] ; then echo "Create users first!" ; exit 1 ; fi
done

#********************************************************************************
#
echo -n "Checking users and groups"
echo "int auto_uida = "$(id -u $(head -1 conf-users))";"            > auto_uids.c
echo "int auto_uidd = "$(id -u `head -2 conf-users | tail -1`)";"  >> auto_uids.c
echo "int auto_uidl = "$(id -u `head -3 conf-users | tail -1`)";"  >> auto_uids.c
echo "int auto_uido = "$(id -u `head -4 conf-users | tail -1`)";"  >> auto_uids.c
echo "int auto_uidp = "$(id -u `head -5 conf-users | tail -1`)";"  >> auto_uids.c
echo "int auto_uidq = "$(id -u `head -6 conf-users | tail -1`)";"  >> auto_uids.c
echo "int auto_uidr = "$(id -u `head -7 conf-users | tail -1`)";"  >> auto_uids.c
echo "int auto_uids = "$(id -u `head -8 conf-users | tail -1`)";"  >> auto_uids.c
echo "int auto_gidq = "$(getent group $(head -1 conf-groups) | cut -d: -f3)";"          >> auto_uids.c
echo "int auto_gidn = "$(getent group `head -2 conf-groups | tail -1` | cut -d: -f3)";" >> auto_uids.c
echo " ... auto_uids.c created!"

#********************************************************************************
# check for header files
echo -n "Checkiing for select.h ..."
if [ -f /usr/include/sys/select.h ] ; then 
  CCOPTS=$CCOPTS" -DHAS_SELECT_H"
  echo "found!"
 else
  echo "not found, using internal solution!"
fi


#********************************************************************************
# Create compile, load, makelib
# compile: auto-cc
echo -n "Checking for compile ... "
CC=`head -1 conf-cc`"$CCOPTS"
#echo CC: $CC
(cat warn-auto.sh ; echo exec "$CC" -c '${1+"$@"}')  > compile
#echo exec "$CC" -c '${1+"$@"}'
chmod 755 compile
echo "created!"

# from Makefile
#compile: make-compile warn-auto.sh systype
#       ( cat warn-auto.sh; ./make-compile "`cat systype`" ) > compile



# load: auto-ld
echo -n "Checking for loader ... "
LD=`head -1 conf-ld`"$LDOPTS"
(cat warn-auto.sh ; echo 'main="$1"; shift' ; \
    echo exec "$LD" '-o "$main" "$main".o ${1+"$@"}') > load
chmod 755 load
echo "created!"

# makelib
echo -n "Checking for makelib ... "
(cat warn-auto.sh ; \
  echo 'main="$1"; shift' ; \
  echo 'rm -f "$main"' ; \
  echo 'ar cr "$main" ${1+"$@"}' ; \
  echo 'ranlib "$main"') > makelib
chmod 755 makelib
echo "created!"


echo
echo "Done! Now run make."
